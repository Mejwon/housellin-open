diff --git a/node_modules/react-mailchimp-subscribe/es/index.js b/node_modules/react-mailchimp-subscribe/es/index.js
index b44774a..2439e07 100644
--- a/node_modules/react-mailchimp-subscribe/es/index.js
+++ b/node_modules/react-mailchimp-subscribe/es/index.js
@@ -1,20 +1,52 @@
-function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
+function _classCallCheck(instance, Constructor) {
+  if (!(instance instanceof Constructor)) {
+    throw new TypeError('Cannot call a class as a function');
+  }
+}
 
-function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
+function _possibleConstructorReturn(self, call) {
+  if (!self) {
+    throw new ReferenceError(
+      "this hasn't been initialised - super() hasn't been called"
+    );
+  }
+  return call && (typeof call === 'object' || typeof call === 'function')
+    ? call
+    : self;
+}
 
-function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
+function _inherits(subClass, superClass) {
+  if (typeof superClass !== 'function' && superClass !== null) {
+    throw new TypeError(
+      'Super expression must either be null or a function, not ' +
+        typeof superClass
+    );
+  }
+  subClass.prototype = Object.create(superClass && superClass.prototype, {
+    constructor: {
+      value: subClass,
+      enumerable: false,
+      writable: true,
+      configurable: true
+    }
+  });
+  if (superClass)
+    Object.setPrototypeOf
+      ? Object.setPrototypeOf(subClass, superClass)
+      : (subClass.__proto__ = superClass);
+}
 
-import React from "react";
-import PropTypes from "prop-types";
-import jsonp from "jsonp";
-import toQueryString from "to-querystring";
-import SimpleForm from "./SimpleForm";
+import React from 'react';
+import PropTypes from 'prop-types';
+import jsonp from 'jsonp';
+import toQueryString from 'to-querystring';
+import SimpleForm from './SimpleForm';
 
 var getAjaxUrl = function getAjaxUrl(url) {
-  return url.replace("/post?", "/post-json?");
+  return url.replace('/post?', '/post-json?');
 };
 
-var MailchimpSubscribe = function (_React$Component) {
+var MailchimpSubscribe = (function(_React$Component) {
   _inherits(MailchimpSubscribe, _React$Component);
 
   function MailchimpSubscribe() {
@@ -22,42 +54,82 @@ var MailchimpSubscribe = function (_React$Component) {
 
     _classCallCheck(this, MailchimpSubscribe);
 
-    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
+    for (
+      var _len = arguments.length, args = Array(_len), _key = 0;
+      _key < _len;
+      _key++
+    ) {
       args[_key] = arguments[_key];
     }
 
-    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.state = {
-      status: null,
-      message: null
-    }, _this.subscribe = function (data) {
-      var params = toQueryString(data);
-      var url = getAjaxUrl(_this.props.url) + "&" + params;
-      _this.setState({
-        status: "sending",
-        message: null
-      }, function () {
-        return jsonp(url, {
-          param: "c"
-        }, function (err, data) {
-          if (err) {
-            _this.setState({
-              status: "error",
-              message: err
-            });
-          } else if (data.result !== "success") {
-            _this.setState({
-              status: "error",
-              message: data.msg
-            });
-          } else {
-            _this.setState({
-              status: "success",
-              message: data.msg
-            });
-          }
-        });
-      });
-    }, _temp), _possibleConstructorReturn(_this, _ret);
+    return (
+      (_ret =
+        ((_temp =
+          ((_this = _possibleConstructorReturn(
+            this,
+            _React$Component.call.apply(_React$Component, [this].concat(args))
+          )),
+          _this)),
+        (_this.state = {
+          status: null,
+          message: null
+        }),
+        (_this.subscribe = function(data) {
+          var params = toQueryString(data);
+          var url = getAjaxUrl(_this.props.url) + '&' + params;
+          _this.setState(
+            {
+              status: 'sending',
+              message: null
+            },
+            function() {
+              return jsonp(
+                url,
+                {
+                  param: 'c'
+                },
+                function(err, data) {
+                  if (err) {
+                    _this.setState({
+                      status: 'error',
+                      message: err
+                    });
+                  } else if (data.result !== 'success') {
+                    if (data.msg == '0 - Please enter a value') {
+                      _this.setState({
+                        status: 'error',
+                        message: 'Pole jest wymagane'
+                      });
+                    } else if (
+                      data.msg ===
+                        '0 - An email address must contain a single @' ||
+                      data.msg ===
+                        '0 - The domain portion of the email address is invalid (the portion after the @: )'
+                    ) {
+                      _this.setState({
+                        status: 'error',
+                        message: 'Proszę wpisać poprawny email'
+                      });
+                    } else {
+                      _this.setState({
+                        status: 'error',
+                        message: data.msg
+                      });
+                    }
+                  } else {
+                    _this.setState({
+                      status: 'success',
+                      message: data.msg
+                    });
+                  }
+                }
+              );
+            }
+          );
+        }),
+        _temp)),
+      _possibleConstructorReturn(_this, _ret)
+    );
   }
 
   MailchimpSubscribe.prototype.render = function render() {
@@ -69,18 +141,21 @@ var MailchimpSubscribe = function (_React$Component) {
   };
 
   return MailchimpSubscribe;
-}(React.Component);
+})(React.Component);
 
-MailchimpSubscribe.propTypes = process.env.NODE_ENV !== "production" ? {
-  render: PropTypes.func,
-  url: PropTypes.string.isRequired
-} : {};
+MailchimpSubscribe.propTypes =
+  process.env.NODE_ENV !== 'production'
+    ? {
+        render: PropTypes.func,
+        url: PropTypes.string.isRequired
+      }
+    : {};
 
 MailchimpSubscribe.defaultProps = {
   render: function render(_ref) {
     var subscribe = _ref.subscribe,
-        status = _ref.status,
-        message = _ref.message;
+      status = _ref.status,
+      message = _ref.message;
     return React.createElement(SimpleForm, {
       status: status,
       message: message,
diff --git a/node_modules/react-mailchimp-subscribe/lib/index.js b/node_modules/react-mailchimp-subscribe/lib/index.js
index 5ded9ca..7d8a46c 100644
--- a/node_modules/react-mailchimp-subscribe/lib/index.js
+++ b/node_modules/react-mailchimp-subscribe/lib/index.js
@@ -1,40 +1,74 @@
-"use strict";
+'use strict';
 
 exports.__esModule = true;
 
-var _react = require("react");
+var _react = require('react');
 
 var _react2 = _interopRequireDefault(_react);
 
-var _propTypes = require("prop-types");
+var _propTypes = require('prop-types');
 
 var _propTypes2 = _interopRequireDefault(_propTypes);
 
-var _jsonp = require("jsonp");
+var _jsonp = require('jsonp');
 
 var _jsonp2 = _interopRequireDefault(_jsonp);
 
-var _toQuerystring = require("to-querystring");
+var _toQuerystring = require('to-querystring');
 
 var _toQuerystring2 = _interopRequireDefault(_toQuerystring);
 
-var _SimpleForm = require("./SimpleForm");
+var _SimpleForm = require('./SimpleForm');
 
 var _SimpleForm2 = _interopRequireDefault(_SimpleForm);
 
-function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
+function _interopRequireDefault(obj) {
+  return obj && obj.__esModule ? obj : { default: obj };
+}
 
-function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
-
-function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
+function _classCallCheck(instance, Constructor) {
+  if (!(instance instanceof Constructor)) {
+    throw new TypeError('Cannot call a class as a function');
+  }
+}
 
-function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
+function _possibleConstructorReturn(self, call) {
+  if (!self) {
+    throw new ReferenceError(
+      "this hasn't been initialised - super() hasn't been called"
+    );
+  }
+  return call && (typeof call === 'object' || typeof call === 'function')
+    ? call
+    : self;
+}
+
+function _inherits(subClass, superClass) {
+  if (typeof superClass !== 'function' && superClass !== null) {
+    throw new TypeError(
+      'Super expression must either be null or a function, not ' +
+        typeof superClass
+    );
+  }
+  subClass.prototype = Object.create(superClass && superClass.prototype, {
+    constructor: {
+      value: subClass,
+      enumerable: false,
+      writable: true,
+      configurable: true
+    }
+  });
+  if (superClass)
+    Object.setPrototypeOf
+      ? Object.setPrototypeOf(subClass, superClass)
+      : (subClass.__proto__ = superClass);
+}
 
 var getAjaxUrl = function getAjaxUrl(url) {
-  return url.replace("/post?", "/post-json?");
+  return url.replace('/post?', '/post-json?');
 };
 
-var MailchimpSubscribe = function (_React$Component) {
+var MailchimpSubscribe = (function(_React$Component) {
   _inherits(MailchimpSubscribe, _React$Component);
 
   function MailchimpSubscribe() {
@@ -42,42 +76,82 @@ var MailchimpSubscribe = function (_React$Component) {
 
     _classCallCheck(this, MailchimpSubscribe);
 
-    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
+    for (
+      var _len = arguments.length, args = Array(_len), _key = 0;
+      _key < _len;
+      _key++
+    ) {
       args[_key] = arguments[_key];
     }
 
-    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.state = {
-      status: null,
-      message: null
-    }, _this.subscribe = function (data) {
-      var params = (0, _toQuerystring2.default)(data);
-      var url = getAjaxUrl(_this.props.url) + "&" + params;
-      _this.setState({
-        status: "sending",
-        message: null
-      }, function () {
-        return (0, _jsonp2.default)(url, {
-          param: "c"
-        }, function (err, data) {
-          if (err) {
-            _this.setState({
-              status: "error",
-              message: err
-            });
-          } else if (data.result !== "success") {
-            _this.setState({
-              status: "error",
-              message: data.msg
-            });
-          } else {
-            _this.setState({
-              status: "success",
-              message: data.msg
-            });
-          }
-        });
-      });
-    }, _temp), _possibleConstructorReturn(_this, _ret);
+    return (
+      (_ret =
+        ((_temp =
+          ((_this = _possibleConstructorReturn(
+            this,
+            _React$Component.call.apply(_React$Component, [this].concat(args))
+          )),
+          _this)),
+        (_this.state = {
+          status: null,
+          message: null
+        }),
+        (_this.subscribe = function(data) {
+          var params = (0, _toQuerystring2.default)(data);
+          var url = getAjaxUrl(_this.props.url) + '&' + params;
+          _this.setState(
+            {
+              status: 'sending',
+              message: null
+            },
+            function() {
+              return (0, _jsonp2.default)(
+                url,
+                {
+                  param: 'c'
+                },
+                function(err, data) {
+                  if (err) {
+                    _this.setState({
+                      status: 'error',
+                      message: err
+                    });
+                  } else if (data.result !== 'success') {
+                    if (data.msg == '0 - Please enter a value') {
+                      _this.setState({
+                        status: 'error',
+                        message: 'Pole jest wymagane'
+                      });
+                    } else if (
+                      data.msg ===
+                        '0 - An email address must contain a single @' ||
+                      data.msg ===
+                        '0 - The domain portion of the email address is invalid (the portion after the @: )'
+                    ) {
+                      _this.setState({
+                        status: 'error',
+                        message: 'Proszę wpisać poprawny email'
+                      });
+                    } else {
+                      _this.setState({
+                        status: 'error',
+                        message: data.msg
+                      });
+                    }
+                  } else {
+                    _this.setState({
+                      status: 'success',
+                      message: data.msg
+                    });
+                  }
+                }
+              );
+            }
+          );
+        }),
+        _temp)),
+      _possibleConstructorReturn(_this, _ret)
+    );
   }
 
   MailchimpSubscribe.prototype.render = function render() {
@@ -89,18 +163,21 @@ var MailchimpSubscribe = function (_React$Component) {
   };
 
   return MailchimpSubscribe;
-}(_react2.default.Component);
+})(_react2.default.Component);
 
-MailchimpSubscribe.propTypes = process.env.NODE_ENV !== "production" ? {
-  render: _propTypes2.default.func,
-  url: _propTypes2.default.string.isRequired
-} : {};
+MailchimpSubscribe.propTypes =
+  process.env.NODE_ENV !== 'production'
+    ? {
+        render: _propTypes2.default.func,
+        url: _propTypes2.default.string.isRequired
+      }
+    : {};
 
 MailchimpSubscribe.defaultProps = {
   render: function render(_ref) {
     var subscribe = _ref.subscribe,
-        status = _ref.status,
-        message = _ref.message;
+      status = _ref.status,
+      message = _ref.message;
     return _react2.default.createElement(_SimpleForm2.default, {
       status: status,
       message: message,
@@ -112,4 +189,4 @@ MailchimpSubscribe.defaultProps = {
 };
 
 exports.default = MailchimpSubscribe;
-module.exports = exports["default"];
\ No newline at end of file
+module.exports = exports['default'];
